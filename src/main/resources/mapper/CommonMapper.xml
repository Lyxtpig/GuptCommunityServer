<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.gupt.community.mapper.CommonMapper">
    <resultMap id="BaseResultMap" type="Common">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="post_type" property="postType" jdbcType="TINYINT"/>
        <result column="post_time" property="postTime" jdbcType="TIMESTAMP"/>
        <result column="is_anonymous" property="isAnonymous" jdbcType="BIT"/>
        <result column="post_content" property="postContent" jdbcType="LONGVARCHAR"/>
        <result column="top" property="top"/>
    </resultMap>
    <!--数据库字段与Vo对象的字段映射配置-->
    <resultMap id="CommonVoMap" type="net.gupt.community.vo.CommonVo" extends="BaseResultMap">
        <result column="nickName" property="student.nickName"/>
        <result column="sex" property="student.sex"/>
        <result column="avatarUrl" property="student.avatarUrl"/>
        <result column="comment_num" property="commentNum"/>
        <result column="love_num" property="likes.loveNum"/>
        <result column="view_num" property="likes.viewNum"/>
        <result column="common_record" property="commonRecord"/>
        <!--一对多关系映射-->
        <collection property="img" ofType="net.gupt.community.entity.Img">
            <result column="img_url" property="imgUrl"/>
        </collection>
    </resultMap>
    <!--动态查询全部帖子全部的信息-->
    <select id="findAllCommonsWithVO" resultMap="CommonVoMap">
        SELECT tbl_common.*,
        tbl_student.nickname,
        tbl_student.avatarUrl,
        tbl_student.sex,
        GROUP_CONCAT(DISTINCT img_url SEPARATOR '|') AS img_Url,
        count(DISTINCT tbl_likes.uid) AS love_num,
        count(DISTINCT tbl_views.uid) AS view_num,
        count(DISTINCT tbl_comment.id) AS comment_num
        FROM tbl_common
        LEFT OUTER JOIN tbl_img
        ON tbl_common.id = tbl_img.article_id AND tbl_common.post_type = tbl_img.article_type
        LEFT OUTER JOIN tbl_student
        ON tbl_common.uid = tbl_student.uid
        LEFT OUTER JOIN tbl_likes
        ON tbl_common.id = tbl_likes.article_id AND tbl_likes.article_type = tbl_common.post_type
        LEFT OUTER JOIN tbl_views
        ON tbl_common.id = tbl_views.article_id AND tbl_views.article_type = tbl_common.post_type
        LEFT OUTER JOIN tbl_comment
        ON tbl_comment.type = tbl_common.post_type AND tbl_common.id = tbl_comment.article_id
        <where>
            <if test="postType != null">
                AND tbl_common.post_type = #{postType}
            </if>
            <if test="uid != null">
                AND tbl_common.uid = #{uid}
            </if>
            <if test="id != null">
                AND tbl_common.id = #{id}
            </if>
            <if test="isTop !=null">
                AND top =#{isTop}
            </if>
            <choose>
                <when test="postType == 0 and isSearch == 0 and searchContent !=null">
                    AND post_content REGEXP #{searchContent}
                </when>
                <when test="postType == 1 and isSearch == 0 and searchContent !=null">
                    AND title REGEXP #{searchContent}
                </when>
            </choose>
        </where>
        GROUP BY tbl_common.id DESC
    </select>
    <!--统计单表记录-->
    <select id="findCommonArticleById" parameterType="integer" resultType="int">
        SELECT COUNT(*)
        FROM tbl_common
        where id = #{articleId}
    </select>
    <delete id="deleteArticleByIdAndType">
        DELETE community.tbl_common, community.tbl_likes, community.tbl_comment, community.tbl_img , community.tbl_views, community.tbl_report
        FROM community.tbl_common
                 LEFT JOIN tbl_likes ON tbl_common.id = tbl_likes.article_id And tbl_likes.article_type = #{articleType}
                 LEFT JOIN tbl_comment ON tbl_common.id = tbl_comment.article_id AND type = #{articleType}
                 LEFT JOIN tbl_img ON tbl_common.id = tbl_img.article_id AND tbl_img.article_type = #{articleType}
                 LEFT JOIN tbl_views ON tbl_common.id = tbl_views.article_id AND tbl_views.article_type = #{articleType}
                 LEFT JOIN tbl_report ON tbl_common.id = tbl_report.article_id AND tbl_report.article_type = #{articleType}
        WHERE tbl_common.id = #{id, jdbcType=INTEGER};
    </delete>

    <insert id="insert" parameterType="Common">
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        INSERT INTO tbl_common
        (id, uid, title, post_type, post_time, is_anonymous, post_content, top)
        VALUES (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
        #{postType,jdbcType=TINYINT}, #{postTime,jdbcType=TIMESTAMP}, #{isAnonymous,jdbcType=BIT},
        #{postContent,jdbcType=LONGVARCHAR},#{top})
    </insert>

    <!--设置置顶帖子-->
    <update id="setTop" parameterType="Common">
        UPDATE tbl_common
        SET top = #{top}
        WHERE post_type = #{postType}
          AND id = #{id,jdbcType=INTEGER}
    </update>

</mapper>