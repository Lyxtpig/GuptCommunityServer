<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.gupt.community.mapper.CommonMapper">
    <resultMap id="BaseResultMap" type="Common">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="post_type" property="postType" jdbcType="TINYINT"/>
        <result column="post_time" property="postTime" jdbcType="TIMESTAMP"/>
        <result column="is_anonymous" property="isAnonymous" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="Common" extends="BaseResultMap">
        <result column="post_content" property="postContent" jdbcType="LONGVARCHAR"/>
    </resultMap>

    <resultMap id="CommonUnionStudent" type="Common" extends="ResultMapWithBLOBs">
        <result column="nickName" property="nickName"/>
        <result column="avatarUrl" property="avatarUrl"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, uid, title, post_type, post_time, is_anonymous
    </sql>
    <sql id="Blob_Column_List">
        post_content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tbl_common
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--动态查询帖子-->
    <select id="findAllCommons" resultType="common" resultMap="CommonUnionStudent">
        select tbl_common.*,tbl_student.nickname,tbl_student.avatarUrl
        from tbl_common
        left outer join tbl_student on tbl_student.uid = tbl_common.uid
        <where>
            <if test="postType != null">
                and tbl_common.post_type = #{postType}
            </if>
            <if test="uid != null">
                and tbl_common.uid = #{uid}
            </if>
            <if test="id != null">
                and tbl_common.id = #{id}
            </if>
        </where>
        order by id desc
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from tbl_common
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteArticleByIdAndType">
        DELETE community.tbl_common, community.tbl_likes, community.tbl_comment, community.tbl_img , community.tbl_views
        FROM community.tbl_common
                 LEFT JOIN tbl_likes ON tbl_common.id = tbl_likes.article_id And tbl_likes.article_type=#{articleType}
                 LEFT JOIN tbl_comment ON tbl_common.id = tbl_comment.article_id AND type = #{articleType}
                 LEFT JOIN tbl_img ON tbl_common.id = tbl_img.article_id AND tbl_img.article_type = #{articleType}
                 LEFT JOIN tbl_views ON tbl_common.id = tbl_views.article_id and tbl_views.article_type = #{articleType}
        WHERE tbl_common.id = #{id, jdbcType=INTEGER};
    </delete>

    <insert id="insert" parameterType="Common">
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        insert into tbl_common (id, uid, title,
        post_type, post_time, is_anonymous,
        post_content)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
        #{postType,jdbcType=TINYINT}, #{postTime,jdbcType=TIMESTAMP}, #{isAnonymous,jdbcType=BIT},
        #{postContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="Common">
        insert into tbl_common
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="postType != null">
                post_type,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="isAnonymous != null">
                is_anonymous,
            </if>
            <if test="postContent != null">
                post_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="postType != null">
                #{postType,jdbcType=TINYINT},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isAnonymous != null">
                #{isAnonymous,jdbcType=BIT},
            </if>
            <if test="postContent != null">
                #{postContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Common">
        update tbl_common
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="postType != null">
                post_type = #{postType,jdbcType=TINYINT},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isAnonymous != null">
                is_anonymous = #{isAnonymous,jdbcType=BIT},
            </if>
            <if test="postContent != null">
                post_content = #{postContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="Common">
        update tbl_common
        set uid          = #{uid,jdbcType=INTEGER},
            title        = #{title,jdbcType=VARCHAR},
            post_type    = #{postType,jdbcType=TINYINT},
            post_time    = #{postTime,jdbcType=TIMESTAMP},
            is_anonymous = #{isAnonymous,jdbcType=BIT},
            post_content = #{postContent,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Common">
        update tbl_common
        set uid          = #{uid,jdbcType=INTEGER},
            title        = #{title,jdbcType=VARCHAR},
            post_type    = #{postType,jdbcType=TINYINT},
            post_time    = #{postTime,jdbcType=TIMESTAMP},
            is_anonymous = #{isAnonymous,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>