<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.gupt.community.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="Comment">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="reply_uid" property="replyUid" jdbcType="INTEGER"/>
        <result column="reply_nickname" property="replyNickname" jdbcType="VARCHAR"/>
    </resultMap>
    <!--评论的Vo结果集-->
    <resultMap id="CommentUnionStudent" type="net.gupt.community.vo.CommentVo" extends="BaseResultMap">
        <result column="uid" property="student.uid"/>
        <result column="nickName" property="student.nickName"/>
        <result column="avatarUrl" property="student.avatarUrl"/>
    </resultMap>
    <!--查询所有评论-->
    <select id="findCommentsByArticleId" resultMap="CommentUnionStudent" resultType="comment">
        SELECT distinct tbl_comment.id,
                        reply.reply_uid,
                        tbl_comment.content,
                        tbl_comment.type,
                        tbl_comment.article_id,
                        tbl_comment.create_time,
                        tbl_student.uid,
                        tbl_student.nickname,
                        tbl_student.avatarUrl,
                        reply.nickname as reply_nickname
        FROM tbl_comment
                 LEFT OUTER JOIN tbl_student ON tbl_comment.uid = tbl_student.uid
                 LEFT OUTER JOIN (SELECT tbl_comment.reply_uid, tbl_student.nickname
                                  FROM tbl_comment
                                           LEFT OUTER JOIN tbl_student ON tbl_comment.reply_uid = tbl_student.uid
                                  WHERE reply_uid is not null) AS reply ON tbl_comment.reply_uid = reply.reply_uid
        WHERE tbl_comment.article_id = #{articleId}
          AND tbl_comment.type = #{type}
        ORDER BY tbl_comment.id DESC
    </select>
    <!--通过ArticleId和type删除评论-->
    <delete id="deleteByArticleId" parameterType="java.lang.Integer">
        DELETE
        FROM tbl_comment
        WHERE article_id = #{articleId}
          AND type = #{articleType}
    </delete>
    <!--通过主键删除评论-->
    <delete id="deleteByPrimaryId" parameterType="integer">
        DELETE
        FROM tbl_comment
        WHERE id = #{id}
          AND uid = #{uid}
    </delete>
    <!--添加评论-->
    <insert id="insertByComment" parameterType="Comment">
        INSERT INTO tbl_comment (uid, reply_uid, type, article_id, create_time, content)
        VALUES (#{uid,jdbcType=INTEGER}, #{replyUid}, #{type,jdbcType=TINYINT},
                #{articleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
    </insert>

</mapper>