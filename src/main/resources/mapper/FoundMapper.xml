<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.gupt.community.mapper.FoundMapper">
    <!--基础的映射-->
    <resultMap id="BaseResultMap" type="net.gupt.community.entity.Found">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="post_time" property="postTime" jdbcType="TIMESTAMP"/>
        <result column="contact_number" property="contactNumber" jdbcType="VARCHAR"/>
        <result column="lost_time" property="lostTime" jdbcType="VARCHAR"/>
        <result column="lost_name" property="lostName" jdbcType="VARCHAR"/>
        <result column="lost_class" property="lostClass" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="article_state" property="articleState" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="net.gupt.community.entity.Found" extends="BaseResultMap">
        <result column="lost_describe" property="lostDescribe" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <!--定义封装found实体类和comment实体类和图片实体类和学生实体类的ResultMap-->
    <resultMap id="ResultMapWithMoreTable" type="net.gupt.community.entity.Found" extends="ResultMapWithBLOBs">
        <!--配置一对多的多表查询映射-->
        <collection property="foundComments" ofType="net.gupt.community.entity.Comment">
            <result property="createTime" column="create_time"/>
            <result property="content" column="content"/>
        </collection>
        <collection property="foundImg" ofType="net.gupt.community.entity.Img">
            <result property="imgUrl" column="img_url"/>
        </collection>
    </resultMap>
    <!--基础的数据库列名-->
    <sql id="Base_Column_List">
    id, uid, title, post_time, contact_number, lost_time, lost_name, lost_class, address, 
    article_state
  </sql>
    <sql id="Blob_Column_List">
    lost_describe
  </sql>
    <!--通过openid、状态 动态查询失物找回的帖子以及对应的图片和评论信息-->
    <!--    <select id="findAllFound" resultType="found" resultMap="ResultMapWithMoreTable"-->
    <!--            parameterType="net.gupt.community.vo.FoundQueryVo">-->
    <!--        SELECT tbl_found.*,-->
    <!--        tbl_comment.content,tbl_comment.create_time,-->
    <!--        tbl_img.img_url from tbl_found-->
    <!--        left outer join tbl_comment on tbl_comment.article_id = tbl_found.id and tbl_comment.type =2-->
    <!--        left outer join tbl_img on tbl_img.article_id = tbl_found.id and tbl_img.article_type = 2-->
    <!--        &lt;!&ndash;动态条件查询&ndash;&gt;-->
    <!--        <where>-->
    <!--            <if test="found.id != null">-->
    <!--                and tbl_found.id = #{found.id}-->
    <!--            </if>-->
    <!--            <if test="student.openId != null">-->
    <!--                and tbl_found.uid in (select tbl_student.uid from tbl_student where open_id = #{student.openId})-->
    <!--            </if>-->
    <!--            <if test="found.articleState !=null">-->
    <!--                and article_state =#{found.articleState}-->
    <!--            </if>-->
    <!--        </where>-->
    <!--        ORDER BY tbl_found.post_time desc-->
    <!--    </select>-->
    <!--只查询失物表的失物信息-->
    <select id="findAllFound" resultMap="ResultMapWithBLOBs" parameterType="net.gupt.community.vo.FoundQueryVo">
        SELECT * FROM tbl_found
        <!--动态条件查询-->
        <where>
            <if test="found.id != null">
                and tbl_found.id = #{found.id}
            </if>
            <if test="student.openId != null">
                and tbl_found.uid in (select tbl_student.uid from tbl_student where open_id = #{student.openId})
            </if>
            <if test="found.articleState !=null">
                and article_state =#{found.articleState}
            </if>
        </where>
        ORDER BY tbl_found.post_time desc
    </select>
    <!--通过主键删除所有有关失物信息-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE community.tbl_found,community.tbl_comment,tbl_img
        FROM tbl_found
        LEFT JOIN tbl_comment ON tbl_found.id = tbl_comment.article_id AND type =2
        LEFT JOIN tbl_img ON tbl_found.id = tbl_img.article_id  AND  article_type =2
        WHERE tbl_found.id = #{id};
    </delete>
    <!--发送失物信息检验NULL-->
    <insert id="insertSelective" parameterType="net.gupt.community.entity.Found">
        /*返回插入的成功的id*/
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Integer" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
        insert into tbl_found
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="contactNumber != null">
                contact_number,
            </if>
            <if test="lostTime != null">
                lost_time,
            </if>
            <if test="lostName != null">
                lost_name,
            </if>
            <if test="lostClass != null">
                lost_class,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="articleState != null">
                article_state,
            </if>
            <if test="lostDescribe != null">
                lost_describe,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contactNumber != null">
                #{contactNumber,jdbcType=VARCHAR},
            </if>
            <if test="lostTime != null">
                #{lostTime,jdbcType=VARCHAR},
            </if>
            <if test="lostName != null">
                #{lostName,jdbcType=VARCHAR},
            </if>
            <if test="lostClass != null">
                #{lostClass,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="articleState != null">
                #{articleState,jdbcType=BIT},
            </if>
            <if test="lostDescribe != null">
                #{lostDescribe,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <!--更新失物状态-->
    <update id="updateFoundStatusById" parameterType="net.gupt.community.entity.Found">
         UPDATE tbl_found set article_state = #{articleState} where id = #{id}
    </update>
    <!--更新失物信息通过id-->
    <update id="updateByPrimaryKeySelective" parameterType="net.gupt.community.entity.Found">
        update tbl_found
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contactNumber != null">
                contact_number = #{contactNumber,jdbcType=VARCHAR},
            </if>
            <if test="lostTime != null">
                lost_time = #{lostTime,jdbcType=VARCHAR},
            </if>
            <if test="lostName != null">
                lost_name = #{lostName,jdbcType=VARCHAR},
            </if>
            <if test="lostClass != null">
                lost_class = #{lostClass,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="articleState != null">
                article_state = #{articleState,jdbcType=BIT},
            </if>
            <if test="lostDescribe != null">
                lost_describe = #{lostDescribe,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>